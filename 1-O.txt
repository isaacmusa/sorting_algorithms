#include "sort.h"

/**
 * insertion_sort_list - Sorts a doubly linked list of integers in ascending
 *                       order using the Insertion sort algorithm.
 * @list: A pointer to a pointer to the first node in the list.
 */
void insertion_sort_list(listint_t **list)
{
    if (list == NULL || *list == NULL || (*list)->next == NULL)
        return;

    listint_t *curr = (*list)->next;

    while (curr != NULL)
    {
        listint_t *key = curr;
        listint_t *prev = curr->prev;

        while (prev != NULL && prev->n > key->n)
        {
            /* Swap key and prev nodes */
            listint_t *tmp = prev->prev;
            prev->next = key->next;
            if (key->next != NULL)
                key->next->prev = prev;
            prev->prev = key;
            key->next = prev;
            key->prev = tmp;
            if (tmp != NULL)
                tmp->next = key;
            else
                *list = key;

            prev = key->prev;
            print_list(*list);
        }

        curr = curr->next;
    }
}
